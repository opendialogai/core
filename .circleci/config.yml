# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.4.10-fpm

    resource_class: large

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt install -y libsqlite3-dev
      - run: sudo composer self-update
      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: composer install -n --prefer-dist --no-scripts

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.lock" }}

      - run:
          name: "Setup custom environment variables"
          command: |
            echo 'export OVERWRITE_DGRAPH_URL="http://localhost"' >> $BASH_ENV; echo 'export OVERWRITE_DGRAPH_PORT="8080"' >> $BASH_ENV

      # run tests!
      - run: phpdbg -qrr ./vendor/bin/phpunit --exclude skip --coverage-html build/coverage-report -d memory_limit=8192M

      - store_artifacts:
          path:  build/coverage-report

      - run: ./vendor/bin/phpcs --standard=od-cs-ruleset.xml src/ --ignore=*/migrations/*,*/tests/*

      - run:
          name: Output logs on failure
          command: cat ./vendor/orchestra/testbench-core/laravel/storage/logs/*
          when: on_fail
